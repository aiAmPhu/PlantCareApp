// Generated by view binder compiler. Do not edit!
package com.grzeluu.plantcareapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.grzeluu.plantcareapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCheckPlantBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatButton btAddPlant;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout constraintLayout;

  @NonNull
  public final ImageView ivPhoto;

  @NonNull
  public final LinearLayout llAdvices;

  @NonNull
  public final ProgressBar pbFertilizer;

  @NonNull
  public final ProgressBar pbSpraying;

  @NonNull
  public final ProgressBar pbWater;

  @NonNull
  public final RecyclerView rvAdvices;

  @NonNull
  public final TextView tvAdvices;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvCommonName;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvFertilizer;

  @NonNull
  public final TextView tvFertilizingDays;

  @NonNull
  public final TextView tvLatinName;

  @NonNull
  public final TextView tvSpraying;

  @NonNull
  public final TextView tvSprayingDays;

  @NonNull
  public final TextView tvWater;

  @NonNull
  public final TextView tvWateringDays;

  private ActivityCheckPlantBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatButton btAddPlant, @NonNull CardView cardView,
      @NonNull LinearLayout constraintLayout, @NonNull ImageView ivPhoto,
      @NonNull LinearLayout llAdvices, @NonNull ProgressBar pbFertilizer,
      @NonNull ProgressBar pbSpraying, @NonNull ProgressBar pbWater,
      @NonNull RecyclerView rvAdvices, @NonNull TextView tvAdvices, @NonNull TextView tvCategory,
      @NonNull TextView tvCommonName, @NonNull TextView tvDescription,
      @NonNull TextView tvFertilizer, @NonNull TextView tvFertilizingDays,
      @NonNull TextView tvLatinName, @NonNull TextView tvSpraying, @NonNull TextView tvSprayingDays,
      @NonNull TextView tvWater, @NonNull TextView tvWateringDays) {
    this.rootView = rootView;
    this.btAddPlant = btAddPlant;
    this.cardView = cardView;
    this.constraintLayout = constraintLayout;
    this.ivPhoto = ivPhoto;
    this.llAdvices = llAdvices;
    this.pbFertilizer = pbFertilizer;
    this.pbSpraying = pbSpraying;
    this.pbWater = pbWater;
    this.rvAdvices = rvAdvices;
    this.tvAdvices = tvAdvices;
    this.tvCategory = tvCategory;
    this.tvCommonName = tvCommonName;
    this.tvDescription = tvDescription;
    this.tvFertilizer = tvFertilizer;
    this.tvFertilizingDays = tvFertilizingDays;
    this.tvLatinName = tvLatinName;
    this.tvSpraying = tvSpraying;
    this.tvSprayingDays = tvSprayingDays;
    this.tvWater = tvWater;
    this.tvWateringDays = tvWateringDays;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCheckPlantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCheckPlantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_check_plant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCheckPlantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_add_plant;
      AppCompatButton btAddPlant = ViewBindings.findChildViewById(rootView, id);
      if (btAddPlant == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      LinearLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.iv_photo;
      ImageView ivPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivPhoto == null) {
        break missingId;
      }

      id = R.id.ll_advices;
      LinearLayout llAdvices = ViewBindings.findChildViewById(rootView, id);
      if (llAdvices == null) {
        break missingId;
      }

      id = R.id.pb_fertilizer;
      ProgressBar pbFertilizer = ViewBindings.findChildViewById(rootView, id);
      if (pbFertilizer == null) {
        break missingId;
      }

      id = R.id.pb_spraying;
      ProgressBar pbSpraying = ViewBindings.findChildViewById(rootView, id);
      if (pbSpraying == null) {
        break missingId;
      }

      id = R.id.pb_water;
      ProgressBar pbWater = ViewBindings.findChildViewById(rootView, id);
      if (pbWater == null) {
        break missingId;
      }

      id = R.id.rv_advices;
      RecyclerView rvAdvices = ViewBindings.findChildViewById(rootView, id);
      if (rvAdvices == null) {
        break missingId;
      }

      id = R.id.tv_advices;
      TextView tvAdvices = ViewBindings.findChildViewById(rootView, id);
      if (tvAdvices == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_common_name;
      TextView tvCommonName = ViewBindings.findChildViewById(rootView, id);
      if (tvCommonName == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_fertilizer;
      TextView tvFertilizer = ViewBindings.findChildViewById(rootView, id);
      if (tvFertilizer == null) {
        break missingId;
      }

      id = R.id.tv_fertilizing_days;
      TextView tvFertilizingDays = ViewBindings.findChildViewById(rootView, id);
      if (tvFertilizingDays == null) {
        break missingId;
      }

      id = R.id.tv_latin_name;
      TextView tvLatinName = ViewBindings.findChildViewById(rootView, id);
      if (tvLatinName == null) {
        break missingId;
      }

      id = R.id.tv_spraying;
      TextView tvSpraying = ViewBindings.findChildViewById(rootView, id);
      if (tvSpraying == null) {
        break missingId;
      }

      id = R.id.tv_spraying_days;
      TextView tvSprayingDays = ViewBindings.findChildViewById(rootView, id);
      if (tvSprayingDays == null) {
        break missingId;
      }

      id = R.id.tv_water;
      TextView tvWater = ViewBindings.findChildViewById(rootView, id);
      if (tvWater == null) {
        break missingId;
      }

      id = R.id.tv_watering_days;
      TextView tvWateringDays = ViewBindings.findChildViewById(rootView, id);
      if (tvWateringDays == null) {
        break missingId;
      }

      return new ActivityCheckPlantBinding((NestedScrollView) rootView, btAddPlant, cardView,
          constraintLayout, ivPhoto, llAdvices, pbFertilizer, pbSpraying, pbWater, rvAdvices,
          tvAdvices, tvCategory, tvCommonName, tvDescription, tvFertilizer, tvFertilizingDays,
          tvLatinName, tvSpraying, tvSprayingDays, tvWater, tvWateringDays);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
